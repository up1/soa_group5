# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # - job_name: 'prometheus'

  #   # metrics_path defaults to '/metrics'
  #   # scheme defaults to 'http'.

  #   static_configs:
  #     - targets: ['localhost:9090']

  # movie service
  - job_name: 'movie-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['139.59.237.128:9001']

  # cinema service
  - job_name: 'cinema-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['128.199.122.153:9002']

  # showtime service
  - job_name: 'showtime-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['139.59.118.120:9003']

  # user service
  - job_name: 'user-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['128.199.122.153:9004']

  # search service
  - job_name: 'search-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['128.199.122.153:9005']

  # noti service
  - job_name: 'noti-service'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['139.59.118.120:9006']